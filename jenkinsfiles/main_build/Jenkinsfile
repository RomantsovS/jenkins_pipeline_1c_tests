pipeline {
    parameters {
        string(defaultValue: "${env.jenkinsAgent}", description: 'Нода дженкинса, на которой запускать пайплайн. По умолчанию master', name: 'jenkinsAgent')
    }

    agent {
        label "${(env.jenkinsAgent == null || env.jenkinsAgent == 'null') ? "master" : env.jenkinsAgent}"
    }

    options { 
        buildDiscarder(logRotator(numToKeepStr: '7'))
        timestamps()
        timeout(time: 1, unit: 'HOURS')
    }
    
    stages {
        stage("A") {
            options {
                timeout(time: 60, unit: "SECONDS")
            }

            steps {
                script {
                    commonMethods = load "./lib/CommonMethods.groovy"
                    
                    Exception caughtException = null

                    catchError(buildResult: 'SUCCESS', stageResult: 'ABORTED') { 
                        try { timeout(time: 15, unit: 'SECONDS') { 
                            echo "%jenkinsAgent%"
                            echo "Started stage A"
                            sleep(time: 15, unit: "SECONDS")
                        }
                        } catch (org.jenkinsci.plugins.workflow.steps.FlowInterruptedException excp) {
                            echo "catched FlowInterruptedException"

                            if (commonMethods.isTimeoutException(excp)) {
                                echo "isTimeoutException = true"
                                commonMethods.throwTimeoutException("${STAGE_NAME}")
                            }
                        } catch (Throwable excp) {
                            caughtException = excp
                        }
                    }

                    if (caughtException) {
                        error caughtException.message
                    }
                }
            }
        }

        stage("B") {
            steps {
                echo "Started stage B"
            }
        }
    }

    post {
        always {
            script {
                commonMethods.emailJobStatus ("BUILD STATUS")
            }
        }
    }
}